<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--配置写的数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${invest.jdbc.driverClassName}"/>
        <property name="url" value="${invest.jdbc.url}"/>
        <property name="username" value="${invest.jdbc.username}"/>
        <property name="password" value="${invest.jdbc.password}"/>
        <!-- 初始化链接大小 -->
        <property name="initialSize" value="${invest.pool.initialSize}"/>
        <!-- 最大连接数 -->
        <property name="maxActive" value="${invest.pool.maxActive}"/>
        <!-- 连接池中最小空闲连接数 -->
        <property name="minIdle" value="${invest.pool.minIdle}"/>
        <!-- 默认值是无限大，当连接池中连接已经用完了，等待建立一个新连接的最大毫秒数 ( 在抛异常之前 ) -->
        <property name="maxWait" value="${invest.pool.maxWait}"/>
        <!-- 默认值是 true ，当从连接池取连接时，验证这个连接是否有效 -->
        <property name="testOnBorrow" value="${invest.pool.testOnBorrow}"/>
        <!-- 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串 -->
        <property name="testWhileIdle" value="${invest.pool.testWhileIdle}"/>
        <!-- SQL查询,用来验证从连接池取出的连接,在将连接返回给调用者之前.如果指定,则查询必须是一个SQL SELECT并且必须返回至少一行记录 -->
        <property name="validationQuery" value="${invest.pool.validationQuery}"/>
        <!-- 默认值是 flase, 当从把该连接放回到连接池的时，验证这个连接是否有效 -->
        <property name="testOnReturn" value="${invest.pool.testOnReturn}"/>
        <!-- 默认值是 1000 * 60 * 30(30 分钟 ) ，连接池中连接可空闲的时间 -->
        <property name="minEvictableIdleTimeMillis" value="${invest.pool.minEvictableIdleTimeMillis}"/>
        <!-- 默认值是 -1 ，每隔一段多少毫秒跑一次回收空闲线程的线程(空闲链接回收器) -->
        <property name="timeBetweenEvictionRunsMillis" value="${invest.pool.timeBetweenEvictionRunsMillis}"/>
        <!-- 解密密码必须要配置的项 -->
        <property name="filters" value="${invest.pool.filters}"/>
        <property name="connectionProperties" value="${invest.pool.connectionProperties}"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描domain包 使用别名 Mapper配置文件中在parameterType 的值就不用写成全路径名 -->
        <!--<property name="typeAliasesPackage" value="com.lyd.invest.core.content.domain;
        com.lyd.invest.core.user.domain;"/>-->
        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <bean id="coreMapperScannerConfigurer" class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ice.seed.core"/>
        <property name="properties">
            <value>
                mappers=com.ice.seed.common.persistence.Mapper
            </value>
        </property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

</beans>